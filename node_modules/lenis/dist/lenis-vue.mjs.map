{"version":3,"sources":["../packages/vue/src/provider.ts","../packages/vue/src/store.ts","../packages/vue/src/use-lenis.ts"],"sourcesContent":["import Tempus from '@darkroom.engineering/tempus'\r\nimport Lenis, { type ScrollCallback } from 'lenis'\r\nimport type {\r\n  HTMLAttributes,\r\n  InjectionKey,\r\n  Plugin,\r\n  PropType,\r\n  ShallowRef,\r\n} from 'vue'\r\nimport {\r\n  defineComponent,\r\n  h,\r\n  onBeforeUnmount,\r\n  onMounted,\r\n  provide,\r\n  reactive,\r\n  ref,\r\n  shallowRef,\r\n  watch,\r\n} from 'vue'\r\nimport { globalAddCallback, globalLenis, globalRemoveCallback } from './store'\r\n\r\nexport const LenisSymbol: InjectionKey<ShallowRef<Lenis | undefined>> =\r\n  Symbol('LenisContext')\r\nexport const AddCallbackSymbol: InjectionKey<\r\n  (callback: any, priority: number) => void\r\n> = Symbol('AddCallback')\r\nexport const RemoveCallbackSymbol: InjectionKey<(callback: any) => void> =\r\n  Symbol('RemoveCallback')\r\n\r\nexport const VueLenis = defineComponent({\r\n  name: 'VueLenis',\r\n  props: {\r\n    root: {\r\n      type: Boolean as PropType<boolean>,\r\n      default: false,\r\n    },\r\n    autoRaf: {\r\n      type: Boolean as PropType<boolean>,\r\n      default: true,\r\n    },\r\n    rafPriority: {\r\n      type: Number as PropType<number>,\r\n      default: 0,\r\n    },\r\n    options: {\r\n      type: Object as PropType<ConstructorParameters<typeof Lenis>[0]>,\r\n      default: () => ({}),\r\n    },\r\n    props: {\r\n      type: Object as PropType<HTMLAttributes>,\r\n      default: () => ({}),\r\n    },\r\n  },\r\n  setup(props, { slots, expose }) {\r\n    const lenisRef = shallowRef<Lenis>()\r\n    const tempusCleanupRef = shallowRef<() => void>()\r\n    const wrapper = ref<HTMLDivElement>()\r\n    const content = ref<HTMLDivElement>()\r\n\r\n    // Setup exposed properties\r\n    expose({\r\n      lenis: lenisRef,\r\n      wrapper,\r\n      content,\r\n    })\r\n\r\n    // Setup the lenis instance when the component is mounted\r\n    onMounted(() => {\r\n      lenisRef.value = new Lenis({\r\n        ...props.options,\r\n        ...(!props.root\r\n          ? {\r\n              wrapper: wrapper.value,\r\n              content: content.value,\r\n            }\r\n          : {}),\r\n      })\r\n    })\r\n\r\n    // Destroy the lenis instance when the component is unmounted\r\n    onBeforeUnmount(() => {\r\n      lenisRef.value?.destroy()\r\n      lenisRef.value = undefined\r\n    })\r\n\r\n    // Sync options\r\n    watch(\r\n      () => props.options,\r\n      (options, oldOptions) => {\r\n        const optionsChanged =\r\n          JSON.stringify(oldOptions) !== JSON.stringify(options)\r\n\r\n        // If any of the options changed, destroy the lenis instance and create a new one\r\n        if (optionsChanged) {\r\n          lenisRef.value?.destroy()\r\n          lenisRef.value = new Lenis({\r\n            ...props.options,\r\n            ...(!props.root\r\n              ? {\r\n                  wrapper: wrapper.value,\r\n                  content: content.value,\r\n                }\r\n              : {}),\r\n          })\r\n        }\r\n      },\r\n      { deep: true }\r\n    )\r\n\r\n    // Sync autoRaf\r\n    watch(\r\n      [lenisRef, () => props.autoRaf, () => props.rafPriority],\r\n      ([lenis, autoRaf, rafPriority]) => {\r\n        if (!lenis || !autoRaf) {\r\n          // If lenis is not defined or autoRaf is false, stop the raf if there is one\r\n          return tempusCleanupRef.value?.()\r\n        }\r\n\r\n        // If either lenis, autoRaf or rafPriority changed, stop the raf if there is one and start a new one\r\n        tempusCleanupRef.value?.()\r\n        if (autoRaf) {\r\n          tempusCleanupRef.value = Tempus.add(\r\n            (time: number) => lenis?.raf(time),\r\n            rafPriority\r\n          )\r\n        }\r\n      }\r\n    )\r\n\r\n    const callbacks = reactive<\r\n      { callback: ScrollCallback; priority: number }[]\r\n    >([])\r\n\r\n    function addCallback(callback: ScrollCallback, priority: number) {\r\n      callbacks.push({ callback, priority })\r\n      callbacks.sort((a, b) => a.priority - b.priority)\r\n    }\r\n\r\n    function removeCallback(callback: ScrollCallback) {\r\n      callbacks.splice(\r\n        callbacks.findIndex((cb) => cb.callback === callback),\r\n        1\r\n      )\r\n    }\r\n\r\n    const onScroll: ScrollCallback = (data) => {\r\n      for (let i = 0; i < callbacks.length; i++) {\r\n        callbacks[i]?.callback(data)\r\n      }\r\n    }\r\n\r\n    watch(lenisRef, (lenis) => {\r\n      lenis?.on('scroll', onScroll)\r\n\r\n      if (props.root) {\r\n        globalLenis.value = lenis\r\n        globalAddCallback.value = addCallback\r\n        globalRemoveCallback.value = removeCallback\r\n      }\r\n    })\r\n\r\n    if (!props.root) {\r\n      provide(LenisSymbol, lenisRef)\r\n      provide(AddCallbackSymbol, addCallback)\r\n      provide(RemoveCallbackSymbol, removeCallback)\r\n    }\r\n\r\n    return () => {\r\n      if (props.root) {\r\n        return slots.default?.()\r\n      } else {\r\n        const combinedClassName = ['lenis', props.props?.class]\r\n          .filter(Boolean)\r\n          .join(' ')\r\n        delete props.props?.class\r\n\r\n        return h('div', { class: combinedClassName, ref: wrapper, ...props }, [\r\n          h('div', { ref: content }, slots.default?.()),\r\n        ])\r\n      }\r\n    }\r\n  },\r\n})\r\n\r\nexport const vueLenisPlugin: Plugin = (app) => {\r\n  app.component('vue-lenis', VueLenis)\r\n  // Setup a global provide to silence top level useLenis injection warning\r\n  app.provide(LenisSymbol, shallowRef(undefined))\r\n  app.provide(AddCallbackSymbol, undefined as any)\r\n  app.provide(RemoveCallbackSymbol, undefined as any)\r\n}\r\n\r\n// @ts-ignore\r\ndeclare module '@vue/runtime-core' {\r\n  export interface GlobalComponents {\r\n    'vue-lenis': typeof VueLenis\r\n  }\r\n}\r\n","import type Lenis from 'lenis'\r\nimport type { ScrollCallback } from 'lenis'\r\nimport { shallowRef } from 'vue'\r\n\r\nexport const globalLenis = shallowRef<Lenis>()\r\nexport const globalAddCallback =\r\n  shallowRef<(callback: ScrollCallback, priority: number) => void>()\r\nexport const globalRemoveCallback =\r\n  shallowRef<(callback: ScrollCallback) => void>()\r\n","import type { ScrollCallback } from 'lenis'\r\nimport { computed, inject, nextTick, onBeforeUnmount, watch } from 'vue'\r\nimport {\r\n  AddCallbackSymbol,\r\n  LenisSymbol,\r\n  RemoveCallbackSymbol,\r\n} from './provider'\r\nimport { globalAddCallback, globalLenis, globalRemoveCallback } from './store'\r\n\r\nexport function useLenis(callback?: ScrollCallback, priority = 0) {\r\n  const lenisInjection = inject(LenisSymbol)\r\n  const addCallbackInjection = inject(AddCallbackSymbol)\r\n  const removeCallbackInjection = inject(RemoveCallbackSymbol)\r\n\r\n  const addCallback = computed(() =>\r\n    addCallbackInjection ? addCallbackInjection : globalAddCallback.value\r\n  )\r\n  const removeCallback = computed(() =>\r\n    removeCallbackInjection\r\n      ? removeCallbackInjection\r\n      : globalRemoveCallback.value\r\n  )\r\n\r\n  const lenis = computed(() =>\r\n    lenisInjection?.value ? lenisInjection.value : globalLenis.value\r\n  )\r\n\r\n  // Wait two ticks to make sure the lenis instance is mounted\r\n  nextTick(() => {\r\n    nextTick(() => {\r\n      if (!lenis.value) {\r\n        throw new Error(\r\n          'No lenis instance found, either mount a root lenis instance or wrap your component in a lenis provider'\r\n        )\r\n      }\r\n    })\r\n  })\r\n\r\n  watch(\r\n    [lenis, addCallback, removeCallback],\r\n    ([lenis, addCallback, removeCallback]) => {\r\n      if (!lenis || !addCallback || !removeCallback || !callback) return\r\n\r\n      addCallback?.(callback, priority)\r\n      callback?.(lenis as any)\r\n    }\r\n  )\r\n\r\n  onBeforeUnmount(() => {\r\n    if (!removeCallback.value || !callback) return\r\n    removeCallback.value?.(callback)\r\n  })\r\n\r\n  return lenis\r\n}\r\n"],"mappings":"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","names":["shallowRef","shallowRef","onBeforeUnmount","watch","watch","lenis","addCallback","removeCallback","onBeforeUnmount"]}